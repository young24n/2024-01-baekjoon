동적 계획법
원하는 값인 10을 한번에 구하는 것이 아닌 0부터 10까지의 경우의 수를
차근차근 구해서 그 경우의 수를 다음 경우의 수를 구하는 것에 재활용하는 방식
n,k 분리해서 받기(동전 종류 갯수, 원하는 값)
k(원하는 값이 0일 때 경우의 수) 
오름차순 정렬
list 생성, n만큼의 코인 받기
DP 리스트 초기화 -> dp에 [0]을 k+1개 만큼 넣음 즉 [0,0,0,...(k+1)]
모든 동전을 forEach(각각 순회) ex) 1 2 5
각 동전에서 원하는 값까지 forEach(순회) (index가 코인 들어있는 값이 경우의 수("사용된"이 더 올바른가?))
최초 i === c 이기 때문에 모든 index가 DP[0]인 1로 초기화됨 (18 line 참조)
c === 2 -> 2~11까지 실행 update 된 값이 영향을 줌!(최대 9 index까지 접근)
(최초 초기화한 0이 아닌 반복문으로 인해 index에 이전까지 누적된 값이 더해짐)--> 이것이 이전의 경우의 수를 재활용하는 것
c === 5 -> 5~11까지 실행(최대 6 index까지 접근)
k 즉 원하던 값의 인덱스 출력 해당값의 경우의 수가 출력됨
