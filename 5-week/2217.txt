문제:
1.N개의 로프가 주어짐
2.로프가 버틸 수 있는 무게는 각각 다름
3.모든 로프들은 분산된 같은 힘을 받음 이때 로프가 버틸 수 있는 최대 중량을 구해야함
4.모든 로프를 사용해야 할 필요는 없음 임의로 몇 개의 로프를 골라서 사용해도 됨
5.로프는 끊어지면 안됨

ex)
array = [ 27, 23, 15, 11, 3 ] 
1개 27 * 1 = 27
2개 23 * 2 = 46 # 여기서 (27 * 2 = 54)를 해봤자 무의미 (23 * 2 = 46)가 못버티니깐
3개 15 * 3 = 45
4개 11 * 4 = 44
5개 3  * 5 = 15

해설:
최대 중량은 가장 약한 로프에 의해 정해짐 
무게가 고르게 분산되어 강한 로프가 버텨도 약한 로프는 끊어지니
그래서 가장 강한 로프일 수록 로프의 갯수는 무의미 해짐 
하지만 가장 약한 로프는 로프의 갯수가 매우 중요함
늘어날 수록 본인이 받는 하중이 감소하니깐
그래서 모든 로프의 임계중량을 정렬한 후 
약할 수록 로프의 갯수를 증감해줌
(당연하지만 본인보다 강한 로프가 받는 하중을 신경 쓸 필요가 없음)
(본인 보다 약한 로프가 추가되면 약한놈이 새로운 기준이 되어버리니 본인보다 강한 로프의 갯수 전체를 추가하고 계산하면 됨)

---> (가장 약한 로프가 버틸 수 있는 중량 * 로프의 최대 갯수)
강할 수록 로프의 갯수를 뺀다음 계산하면 됨
(역순정렬, 기본정렬에 따라 다르나 보통 index+1로 주면 됨)

--로프의 수가 굉장히 많을 경우--
성능개선을 하자면 직전 계산 값이 현재 계산 값 보다 큰지 비교하고 true의 경우 즉시 종료 후 출력 시
자료 크기가 매우 클때 성능개선이 클 것으로 보임